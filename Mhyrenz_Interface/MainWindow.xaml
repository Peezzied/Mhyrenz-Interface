<mah:MetroWindow x:Class="Mhyrenz_Interface.MainWindow"
        xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Mhyrenz_Interface"
        xmlns:controls="clr-namespace:Mhyrenz_Interface.Controls"
        xmlns:viewModels="clr-namespace:Mhyrenz_Interface.ViewModels"
        xmlns:views="clr-namespace:Mhyrenz_Interface.Views"
        xmlns:converters="clr-namespace:Mhyrenz_Interface.Converters"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        Dialog:DialogParticipation.Register="{Binding}"
        d:DataContext="{d:DesignInstance Type=viewModels:ShellViewModel, IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
        Title="MainWindow" MinHeight="800" MinWidth="1280" WindowStyle="None">
    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands ShowSeparators="False">
            <Button x:Name="GoBackButton"
              Width="{Binding ElementName=HamburgerMenuControl, Path=CompactPaneLength}"
              AutomationProperties.Name="Go back"
              Command="{Binding GoBackCommand}">
                <mah:FontIcon AutomationProperties.Name="Go back icon"
                           FontSize="14"
                           Glyph="&#xE72B;" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    <mah:MetroWindow.Resources>

        <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type controls:MenuItem}">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False" />
                <TextBlock Grid.Column="1"
                   VerticalAlignment="Center"
                   FontSize="16"
                   Text="{Binding Label}" />
            </Grid>
        </DataTemplate>
        <converters:NavigationCommandParamsConverter x:Key="NavigationCommandParamsConverter" />
        <Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
            <Setter Property="ClipToBounds" Value="True" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <mah:TransitioningContentControl Content="{Binding}"
                                                  Grid.Row="1"
                                                  RestartTransitionOnContentChange="True"
                                                  Transition="Custom"
                                                  TransitionCompleted="TransitioningContentControl_TransitionCompleted">
                            <mah:TransitioningContentControl.CustomVisualStates>
                                <VisualState x:Name="CustomTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="CurrentContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
                                            <SplineDoubleKeyFrame KeySpline="0.1, 0.9, 0.2, 1"
                                            KeyTime="00:00:00.300"
                                            Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                   Storyboard.TargetName="PreviousContentPresentationSite"
                                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </mah:TransitioningContentControl.CustomVisualStates>
                        </mah:TransitioningContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </mah:MetroWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <mah:HamburgerMenu x:Name="HamburgerMenuControl" DockPanel.Dock="Top"
                          DisplayMode="CompactInline"
                          IsPaneOpen="True"
                          ItemCommand="{Binding NavigateCommand}"
                          OptionsItemCommand="{Binding NavigateCommand}"
                          ItemTemplate="{StaticResource MenuItemTemplate}"
                          ItemsSource="{Binding Menu}"
                          OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                          OptionsItemsSource="{Binding OptionsMenu}"
                          SelectedItem="{Binding SelectedMenuItem, Mode=TwoWay}"
                          SelectedOptionsItem="{Binding SelectedOptionsMenuItem, Mode=TwoWay}">
            <mah:HamburgerMenu.ItemCommandParameter>
                <MultiBinding Converter="{StaticResource NavigationCommandParamsConverter}">
                    <Binding RelativeSource="{RelativeSource Self}"/>
                    <Binding Path="Menu"/>
                </MultiBinding>
            </mah:HamburgerMenu.ItemCommandParameter>
            <mah:HamburgerMenu.OptionsItemCommandParameter>
                <MultiBinding Converter="{StaticResource NavigationCommandParamsConverter}">
                    <Binding RelativeSource="{RelativeSource Self}"/>
                    <Binding Path="OptionsMenu"/>
                </MultiBinding>
            </mah:HamburgerMenu.OptionsItemCommandParameter>
            <mah:HamburgerMenu.Content>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Background="Black" Grid.Row="0" Orientation="Vertical">
                        <TextBlock Foreground="White" Text="{Binding CurrentViewModel}"/>
                    </StackPanel>
                    <ContentPresenter 
                        Grid.Row="1"
                        DataContext="{Binding CurrentViewModel, RelativeSource={RelativeSource AncestorType=Window}}"
                        Content="{Binding NavigationFrame, RelativeSource={RelativeSource AncestorType=Window}}" />
                    <!--<Frame Grid.Row="1" x:Name="MainFrame" NavigationUIVisibility="Hidden" />-->

                    <views:HomeView Grid.Row="1" Visibility="Hidden" d:Visibility="Visible"/>
                </Grid>
            </mah:HamburgerMenu.Content>
        </mah:HamburgerMenu>
        <controls:StatusBar Grid.Row="1"/>
    </Grid>
</mah:MetroWindow>
