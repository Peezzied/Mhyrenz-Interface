<UserControl x:Class="Mhyrenz_Interface.Controls.AddProductDrawer"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Mhyrenz_Interface.Controls"
             xmlns:vm="clr-namespace:Mhyrenz_Interface.ViewModels"
             xmlns:attach="clr-namespace:Mhyrenz_Interface.Controls.Attached"
             xmlns:converters="clr-namespace:Mhyrenz_Interface.Converters"
             mc:Ignorable="d"
             d:DesignWidth="400">
    <UserControl.Resources>
        <DataTemplate x:Key="NoBarcode">
            <hc:DashedBorder Height="50" BorderDashArray="10,5" CornerRadius="5" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" >
                <Border HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Foreground="{StaticResource MahApps.Brushes.Border.NonActive}" Text="No Barcode"/>
                </Border>
            </hc:DashedBorder>
        </DataTemplate>
        <DataTemplate x:Key="PresentBarcode">
            <Image Source="{Binding Barcode, Converter={StaticResource BarcodeToImageConverter}, IsAsync=True}" Height="31"/>
        </DataTemplate>

        <converters:DoubleToCurrencyStringConverter x:Key="DoubleToCurrencyStringConverter"/>
        <Style x:Key="NumericUpDownExtendBaseStyle" BasedOn="{StaticResource NumericUpDownBaseStyle}" TargetType="hc:NumericUpDown">
            <Setter Property="hc:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}"/>
            <Setter Property="hc:InfoElement.MinContentHeight" Value="{StaticResource DefaultControlHeight}"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Width" Value="Auto"/>
        </Style>
        <Style x:Key="NumericUpDownStyle" BasedOn="{StaticResource NumericUpDownExtendBaseStyle}" TargetType="hc:NumericUpDown">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="hc:NumericUpDown">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition MinHeight="{Binding Path=(hc:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(hc:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Double2GridLengthConverter}}"/>
                            </Grid.RowDefinitions>
                            <DockPanel LastChildFill="True" Visibility="{Binding Path=(hc:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}" HorizontalAlignment="{Binding Path=(hc:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(hc:TitleElement.MarginOnTheTop),RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter DockPanel.Dock="Right" TextElement.Foreground="{DynamicResource DangerBrush}" Margin="4,0,0,0" Content="{Binding Path=(hc:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(hc:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}"/>
                                <TextBlock hc:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Text="{Binding Path=(hc:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}"/>
                            </DockPanel>
                            <Grid Grid.Row="1" SnapsToDevicePixels="true" x:Name="root" >
                                <mah:NumericUpDown attach:ValidationHelper.HasError="{Binding Path=(attach:ParentValidationHelper.HasError), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWayToSource}" TextAlignment="Center" Culture="en-PH" StringFormat="{Binding Path=(local:NumericUpDownEx.StringFormat),RelativeSource={RelativeSource TemplatedParent}}" Minimum="0">
                                    <mah:NumericUpDown.Value>
                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" NotifyOnValidationError="True">
                                            <Binding.ValidationRules>
                                                <vm:NotBlank />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </mah:NumericUpDown.Value>
                                    <mah:NumericUpDown.Style>
                                        <Style TargetType="mah:NumericUpDown">
                                            <Style.Triggers>
                                                <Trigger Property="Validation.HasError" Value="True">
                                                    <Setter Property="BorderBrush" Value="Red"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </mah:NumericUpDown.Style>
                                </mah:NumericUpDown>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <mah:MetroHeader hc:InfoElement.TitleWidth="100" Header="Add a Product" mah:HeaderedControlHelper.HeaderMargin="0,0,0,12">
            <Grid>
                <hc:UniformSpacingPanel Spacing="40" Orientation="Vertical" VerticalAlignment="Top">
                    <hc:UniformSpacingPanel hc:InfoElement.Symbol="*"  hc:InfoElement.Necessary="True" Orientation="Vertical" Spacing="15">
                        <ComboBox 
                            ItemsSource="{Binding Categories}"
                            SelectedItem="{Binding SelectedCategory, Mode=TwoWay}"
                            DisplayMemberPath="Name"
                            hc:InfoElement.Symbol="*"
                            hc:InfoElement.Title="Category"
                            Style="{StaticResource ComboBoxExtend}"/>
                        <TextBox 
                            Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                            hc:InfoElement.Symbol="*"
                            hc:InfoElement.Title="Product Name"
                            Style="{StaticResource TextBoxExtend}"/>
                        <TextBox
                            Text="{Binding GenericName, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding IsGeneric}"
                            hc:InfoElement.Symbol="*"
                            hc:InfoElement.Necessary="False"
                            hc:InfoElement.Title="Generic Name"
                            Style="{StaticResource TextBoxExtend}"/>
                        <hc:Row Gutter="20">
                            <hc:Col Span="12">
                                <hc:NumericUpDown x:Name="RetailPriceNumericUpDown"
                                    attach:ParentValidationHelper.HasError="{Binding ValidationHasError, Mode=OneWayToSource}"
                                    local:NumericUpDownEx.StringFormat="C"
                                    Value="{Binding Price, UpdateSourceTrigger=PropertyChanged}"
                                    hc:InfoElement.Title="Retail Price"
                                    hc:InfoElement.TitleWidth="100"
                                    Style="{StaticResource NumericUpDownStyle}"/>
                            </hc:Col>
                            <hc:Col Span="12">
                                <hc:NumericUpDown x:Name="PrincipalStockNumericUpDown"
                                    attach:ParentValidationHelper.HasError="{Binding ValidationHasError, Mode=OneWayToSource}"
                                    Value="{Binding Qty, UpdateSourceTrigger=PropertyChanged}"
                                    hc:InfoElement.Title="Principal Stock"
                                    hc:InfoElement.TitleWidth="100"
                                    Style="{StaticResource NumericUpDownStyle}"/>
                            </hc:Col>
                        </hc:Row>

                    </hc:UniformSpacingPanel>
                    <hc:UniformSpacingPanel hc:InfoElement.TitlePlacement="Left" Orientation="Vertical" Spacing="10">
                        <hc:DatePicker
                            DisplayDateStart="{x:Static system:DateTime.Now}"
                            DisplayDateEnd="{x:Static system:DateTime.MaxValue}"
                            SelectedDate="{Binding Expiry, UpdateSourceTrigger=PropertyChanged}"
                            hc:InfoElement.Title="Expiry"/>
                        <TextBox 
                            Text="{Binding Batch, UpdateSourceTrigger=PropertyChanged}"
                            hc:InfoElement.Title="Batch Number"
                            Style="{StaticResource TextBoxExtend}"/>
                        <TextBox 
                            Text="{Binding Supplier, UpdateSourceTrigger=PropertyChanged}"
                            hc:InfoElement.Title="Supplier"
                            Style="{StaticResource TextBoxExtend}"/>
                    </hc:UniformSpacingPanel>
                    <hc:UniformSpacingPanel  hc:InfoElement.TitlePlacement="Left" Orientation="Vertical" Spacing="23">
                        <TextBox 
                            Text="{Binding Barcode, UpdateSourceTrigger=PropertyChanged}"
                            hc:InfoElement.Title="Barcode"
                            Style="{StaticResource TextBoxExtend}" />
                        <ContentControl Content="{Binding}" Validation.ErrorTemplate="{x:Null}">
                            <ContentControl.Style>
                                <Style TargetType="ContentControl">
                                    <Setter Property="ContentTemplate" Value="{StaticResource PresentBarcode}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Barcode}" Value="">
                                            <Setter Property="ContentTemplate" Value="{StaticResource NoBarcode}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Barcode}" Value="{x:Null}">
                                            <Setter Property="ContentTemplate" Value="{StaticResource NoBarcode}" />
                                        </DataTrigger>
                                        <DataTrigger Value="Invalid">
                                            <DataTrigger.Binding>
                                                <Binding Path="Barcode"
                                                    Converter="{StaticResource BarcodeToImageConverter}"/>
                                            </DataTrigger.Binding>
                                            <Setter Property="ContentTemplate" Value="{StaticResource NoBarcode}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>
                        <Button Command="{Binding SubmitActionCommand}" Content="Submit" CommandParameter="{Binding (Validation.HasError), ElementName=RetailPriceNumericUpDown}"/>
                    </hc:UniformSpacingPanel>
                </hc:UniformSpacingPanel>
            </Grid>
        </mah:MetroHeader>
    </Grid>
</UserControl>
